---
# Copyright 2025 Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include default variables
  ansible.builtin.include_vars: ../vars/main.yml

- name: include release specific variables
  ansible.builtin.include_vars: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - ../vars
      skip: true

- name: include release specific tasks
  ansible.builtin.include_tasks: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - .
      skip: true

- name: prepare directories
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: /etc/crio/crio.conf.d }
    - { dest: /usr/lib/modules-load.d }

- name: tweak modeprobe entries
  community.general.ini_file:
    option: "{{ item.option }}"
    state: "{{ item.state }}"
    path: /usr/lib/modules-load.d/crio.conf
    section: ""
    mode: "0644"
    allow_no_value: true
  loop: "{{ cri_o_modprobe }}"
  notify:
    - cri_o | systemctl restart systemd-modules-load.service

- name: tweak sysctl entries
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: "{{ item.state }}"
    sysctl_file: /etc/sysctl.conf
    reload: false
  loop: "{{ cri_o_sysctl }}"
  notify:
    - cri_o | systemctl restart systemd-sysctl.service

- name: copy templates
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { dest: /etc/crictl.yaml }
    - { dest: /etc/crio/crio.conf.d/00-defaults.conf }
  notify:
    - cri_o | systemctl daemon-reload
    - cri_o | systemctl restart crio.service

- name: prepare files
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: /etc/crictl.yaml }
    - { dest: /etc/crio/crio.conf.d/00-defaults.conf }
    - { dest: /etc/systemd/system/crio-shutdown.service, state: absent }
    - { dest: /etc/systemd/system/crio-wipe.service, state: absent }
    - { dest: /etc/systemd/system/crio.service, state: absent }
    - { dest: /usr/lib/modules-load.d/crio.conf }
  notify:
    - cri_o | systemctl daemon-reload
    - cri_o | systemctl restart crio.service

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: systemctl start crio.service
  ansible.builtin.service:
    name: crio.service
    state: started
    enabled: true
  changed_when: false
  failed_when: false
